<?xml version="1.0" encoding="UTF-8"?>
<!-- 专题一：SpringAOP相关知识 -->
<!--
    专题一：SpringAOP相关知识

    一、如何专门指定拦截的类/方法？
        答：通过自定义注解的方式
        （给需要拦截的方法打上标记，用MethodSignature来接收，然后把标记.get转变为AutoFill）
        - 首先，创建一个自定义注解类(class -> @interface)，加上注解：
            · @Target(ElementType.METHOD)           表示该注解作用在方法上
            · @Retention(RetentionPolicy.RUNTIME)   表示该注解在运行时生效

        - 然后，在注解类中加上固定方法：OperationType value()   表示该注解有一个属性value，类型为OperationType
          并在注解类中定义一个枚举类OperationType，表示该注解的value属性的值只能是枚举类中的值

        - 之后，在声明@Pointcut("execution(...) 时，后续还要加上注解的全类名：
          &&  @annotation(com.medical.annotation.AutoFill)")

        - 最后，在需要拦截的方法上加上该注解：@AutoFill(OperationType.INSERT)

    二、如何通过SpringAOP获取方法参数？
        答：用MethodSignature来接收标记 ->
        然后把标记.getMethod().getAnnotations(AutoFill.class)转变为AutoFill
-->


<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.medical</groupId>
        <artifactId>medical-cloud</artifactId>
        <version>1.0.0</version>
    </parent>

    <artifactId>medical-common</artifactId>
    <packaging>jar</packaging>
    <name>medical-common</name>
    <description>公共模块</description>

    <dependencies>
        <!-- Spring Boot Starter -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <!-- Spring Boot Web -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- Spring Boot Validation -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!-- JWT -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-api</artifactId>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-impl</artifactId>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-jackson</artifactId>
        </dependency>

        <!-- FastJSON -->
        <dependency>
            <groupId>com.alibaba.fastjson2</groupId>
            <artifactId>fastjson2</artifactId>
        </dependency>

        <!-- Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>


    </dependencies>
</project>
