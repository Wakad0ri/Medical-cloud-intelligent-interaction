<?xml version="1.0" encoding="UTF-8"?>
<!-- 专题一：SpringAOP相关知识 -->
<!--
    专题一：SpringAOP相关知识

    一、如何专门指定拦截的类/方法？
        答：通过自定义注解的方式
        （给需要拦截的方法打上标记，用MethodSignature来接收，然后把标记.get转变为AutoFill）
        - 首先，创建一个自定义注解类(class -> @interface)，加上注解：
            · @Target(ElementType.METHOD)           表示该注解作用在方法上
            · @Retention(RetentionPolicy.RUNTIME)   表示该注解在运行时生效

        - 然后，在注解类中加上固定方法：OperationType value()   表示该注解有一个属性value，类型为OperationType
          并在注解类中定义一个枚举类OperationType，表示该注解的value属性的值只能是枚举类中的值

        - 之后，在声明@Pointcut("execution(...) 时，后续还要加上注解的全类名：
          &&  @annotation(com.medical.annotation.AutoFill)")

        - 最后，在需要拦截的方法上加上该注解：@AutoFill(OperationType.INSERT)

    二、如何通过SpringAOP获取方法参数？
        答：用MethodSignature来接收标记 ->
        然后把标记.getMethod().getAnnotations(AutoFill.class)转变为AutoFill
-->

<!-- 专题二：关于给前端VO为什么要id的问题 -->
<!--
    专题二：关于给前端VO为什么要id的问题

    Q：为什么给前端VO对象要id属性？
    A：因为前端需要根据后端传过来的VO中id来删除数据，所以要给前端VO对象要id属性
-->

<!-- 专题三：传给前端的日期格式如何转换 -->
<!--
    专题三：传给前端的日期格式如何转换
    Q: 后端传给前端的日期会变成 2025,7,19,21,42,6（接口文档），202571921426（前后端联调）的格式
       需要怎么转换？
    A: 所以需要对
        · 方式一: 属性进行@JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")注解，只针对单个注解
        · 方式二: 全局统一日期格式，在WebMvcConfiguration.java 中添加 SpringMVC 的 消息转换器
                 统一对日期进行格式化处理
        @Override
        protected void extendMessageConverters(List<HttpMessageConverter<?>> converters) {
            MappingJackson2HttpMessageConverter converter = new MappingJackson2HttpMessageConverter();
            converter.setObjectMapper(new JacksonObjectMapper());
            定义时间格式，注册时间序列化器（见WebMvcConfiguration.java）
            objectMapper.registerModule(javaTimeModule);
            converter.setObjectMapper(objectMapper);
            converters.add(0, converter);
        }
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.medical</groupId>
    <artifactId>medical-cloud</artifactId>
    <version>1.0.0</version>
    <packaging>pom</packaging>
    <name>medical-cloud</name>
    <description>医云智能互动系统</description>

    <modules>
        <module>medical-common</module>
        <module>medical-pojo</module>
        <module>medical-server</module>
    </modules>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <spring-boot.version>3.2.0</spring-boot.version>
        <mysql.version>8.0.33</mysql.version>
        <mybatis-plus.version>3.5.4</mybatis-plus.version>
        <mybatis.spring>3.0.3</mybatis.spring>
        <druid.version>1.2.21</druid.version>
        <fastjson2.version>2.0.47</fastjson2.version>
        <commons.lang3.version>3.14.0</commons.lang3.version>
        <pagehelper.version>1.4.7</pagehelper.version>
        <jwt.version>0.12.5</jwt.version>
        <lombok.version>1.18.30</lombok.version>
        <knife4j.version>4.3.0</knife4j.version>
        <aspectj.version>1.9.21</aspectj.version>
        <jaxb-api.version>4.0.1</jaxb-api.version>
        <poi.version>5.2.5</poi.version>
        <springdoc.version>2.2.0</springdoc.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Spring Boot BOM -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- MySQL -->
            <dependency>
                <groupId>com.mysql</groupId>
                <artifactId>mysql-connector-j</artifactId>
                <version>${mysql.version}</version>
            </dependency>

            <!-- Druid数据源 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-3-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <!-- MyBatis Plus -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>

            <!-- MyBatis Spring -->
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis-spring</artifactId>
                <version>${mybatis.spring}</version>
            </dependency>

            <!-- FastJSON2 -->
            <dependency>
                <groupId>com.alibaba.fastjson2</groupId>
                <artifactId>fastjson2</artifactId>
                <version>${fastjson2.version}</version>
            </dependency>

            <!-- Commons Lang3 -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons.lang3.version}</version>
            </dependency>

            <!-- PageHelper -->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper.version}</version>
            </dependency>

            <!-- Redis -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-redis</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>

            <!-- JWT -->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-api</artifactId>
                <version>${jwt.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-impl</artifactId>
                <version>${jwt.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-jackson</artifactId>
                <version>${jwt.version}</version>
            </dependency>

            <!-- JAXB API -->
            <dependency>
                <groupId>jakarta.xml.bind</groupId>
                <artifactId>jakarta.xml.bind-api</artifactId>
                <version>${jaxb-api.version}</version>
            </dependency>



            <!-- Lombok -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

            <!-- Knife4j API文档 -->
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-openapi3-jakarta-spring-boot-starter</artifactId>
                <version>${knife4j.version}</version>
            </dependency>

            <!-- SpringDoc OpenAPI -->
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
                <version>${springdoc.version}</version>
            </dependency>

            <!-- Spring Boot AOP Starter -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-aop</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>

            <!-- AspectJ -->
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>${aspectj.version}</version>
            </dependency>
        </dependencies>

    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <source>17</source>
                    <target>17</target>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
